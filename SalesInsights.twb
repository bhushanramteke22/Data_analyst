<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.23.0209.1653                               -->
<workbook original-version='18.1' source-build='2022.4.1 (20224.23.0209.1653)' source-platform='win' version='18.1' xml:base='https://prod-uk-a.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <DashboardGridOverlay />
    <DashboardGridSize />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelRelationshipPerfOptions.true...ObjectModelRelationshipPerfOptions />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='SalesInsightsAtiQ' path='/t/bhushanramteke/workbooks' revision='1.1' site='bhushanramteke' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='transactions+ (sales)' inline='true' name='federated.1p55jmd1q4e3ot18gdkxi1mykljm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1usblem179v1nj1emwns504o6eqa'>
            <connection class='mysql' dbname='sales' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' server-oauth='' server-userid='1209675' source-charset='' username='root' workgroup-auth-mode='prompt' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.1usblem179v1nj1emwns504o6eqa' name='customers' table='[customers]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='mysql.1usblem179v1nj1emwns504o6eqa' name='transactions' table='[transactions]' type='table' />
          <relation connection='mysql.1usblem179v1nj1emwns504o6eqa' name='customers' table='[customers]' type='table' />
          <relation connection='mysql.1usblem179v1nj1emwns504o6eqa' name='date' table='[date]' type='table' />
          <relation connection='mysql.1usblem179v1nj1emwns504o6eqa' name='markets' table='[markets]' type='table' />
          <relation connection='mysql.1usblem179v1nj1emwns504o6eqa' name='products' table='[products]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[currency]' value='[transactions].[currency]' />
          <map key='[custmer_name]' value='[customers].[custmer_name]' />
          <map key='[customer_code (customers)]' value='[customers].[customer_code]' />
          <map key='[customer_code]' value='[transactions].[customer_code]' />
          <map key='[customer_type]' value='[customers].[customer_type]' />
          <map key='[cy_date]' value='[date].[cy_date]' />
          <map key='[date]' value='[date].[date]' />
          <map key='[date_yy_mmm]' value='[date].[date_yy_mmm]' />
          <map key='[market_code]' value='[transactions].[market_code]' />
          <map key='[markets_code]' value='[markets].[markets_code]' />
          <map key='[markets_name]' value='[markets].[markets_name]' />
          <map key='[month_name]' value='[date].[month_name]' />
          <map key='[order_date]' value='[transactions].[order_date]' />
          <map key='[product_code (products)]' value='[products].[product_code]' />
          <map key='[product_code]' value='[transactions].[product_code]' />
          <map key='[product_type]' value='[products].[product_type]' />
          <map key='[sales_amount]' value='[transactions].[sales_amount]' />
          <map key='[sales_qty]' value='[transactions].[sales_qty]' />
          <map key='[year]' value='[date].[year]' />
          <map key='[zone]' value='[markets].[zone]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_D73AC3CBF85D44C692CC9A6C05E64796]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_D73AC3CBF85D44C692CC9A6C05E64796]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>market_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[market_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>market_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_D73AC3CBF85D44C692CC9A6C05E64796]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[order_date]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>order_date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_D73AC3CBF85D44C692CC9A6C05E64796]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_qty</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sales_qty]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_qty</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_D73AC3CBF85D44C692CC9A6C05E64796]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sales_amount]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_amount</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_D73AC3CBF85D44C692CC9A6C05E64796]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>currency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[currency]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>currency</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_D73AC3CBF85D44C692CC9A6C05E64796]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code (customers)]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customers_C9FCEDF2A1DB4685B12189387C22AFEB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>custmer_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[custmer_name]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>custmer_name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customers_C9FCEDF2A1DB4685B12189387C22AFEB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_type]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_type</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customers_C9FCEDF2A1DB4685B12189387C22AFEB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>13</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date_0DE2063B09D34DB2ABD6F83E5F184482]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cy_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[cy_date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>cy_date</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date_0DE2063B09D34DB2ABD6F83E5F184482]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date_0DE2063B09D34DB2ABD6F83E5F184482]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month_name]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>month_name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date_0DE2063B09D34DB2ABD6F83E5F184482]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_yy_mmm</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date_yy_mmm]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date_yy_mmm</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date_0DE2063B09D34DB2ABD6F83E5F184482]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_code]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_code</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[markets_24D2DC8F97D747BB82C28148CD0294A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_name]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_name</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[markets_24D2DC8F97D747BB82C28148CD0294A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[zone]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>zone</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[markets_24D2DC8F97D747BB82C28148CD0294A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code (products)]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[products_BF3CFC70ECFF44F4ABF4D11D734D8F07]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_type]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_type</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[products_BF3CFC70ECFF44F4ABF4D11D734D8F07]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Normalized amount' datatype='real' name='[Calculation_435160381039443968]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [currency] ==&apos;USD&apos; THEN [sales_amount]*76 ELSE [sales_amount] END' />
      </column>
      <column caption='Blank' datatype='string' name='[Calculation_435160381052997633]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot; &quot;' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='customers' datatype='table' name='[__tableau_internal_object_id__].[customers_C9FCEDF2A1DB4685B12189387C22AFEB]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='date' datatype='table' name='[__tableau_internal_object_id__].[date_0DE2063B09D34DB2ABD6F83E5F184482]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='markets' datatype='table' name='[__tableau_internal_object_id__].[markets_24D2DC8F97D747BB82C28148CD0294A0]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='products' datatype='table' name='[__tableau_internal_object_id__].[products_BF3CFC70ECFF44F4ABF4D11D734D8F07]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='transactions' datatype='table' name='[__tableau_internal_object_id__].[transactions_D73AC3CBF85D44C692CC9A6C05E64796]' role='measure' type='quantitative' />
      <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
      <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
      <column caption='Customer Code (Customers)' datatype='string' name='[customer_code (customers)]' role='dimension' type='nominal' />
      <column caption='Customer Code' datatype='string' name='[customer_code]' role='dimension' type='nominal' />
      <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
      <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date Yy Mmm' datatype='string' name='[date_yy_mmm]' role='dimension' type='nominal' />
      <column caption='Market Code' datatype='string' name='[market_code]' role='dimension' type='nominal' />
      <column caption='Markets Code' datatype='string' name='[markets_code]' role='dimension' type='nominal' />
      <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
      <column caption='Month Name' datatype='string' name='[month_name]' role='dimension' type='nominal' />
      <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
      <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
      <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
      <column caption='Product Type' datatype='string' name='[product_type]' role='dimension' type='nominal' />
      <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
      <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column caption='Zone' datatype='string' name='[zone]' role='dimension' type='nominal' />
      <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Blank,MONTH(Cy Date))' hidden='true' name='[Action (Blank,MONTH(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_435160381052997633]' />
          <groupfilter function='level-members' level='[mn:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Blank,YEAR(Cy Date))' hidden='true' name='[Action (Blank,YEAR(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_435160381052997633]' />
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Markets Name)' hidden='true' name='[Action (Markets Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[markets_name]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:markets_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Kanpur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Delhi NCR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kochi&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Nagpur&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Patna&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lucknow&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhubaneshwar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bengaluru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chennai&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Surat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ahmedabad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hyderabad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mumbai&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhopal&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='product_code' />
        <field-sort-custom-order field='customer_code' />
        <field-sort-custom-order field='market_code' />
        <field-sort-custom-order field='order_date' />
        <field-sort-custom-order field='sales_qty' />
        <field-sort-custom-order field='sales_amount' />
        <field-sort-custom-order field='currency' />
        <field-sort-custom-order field='Calculation_435160381039443968' />
      </field-sort-info>
      <filter class='categorical' column='[markets_code]' filter-group='2'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[markets_code]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[markets_code]' member='&quot;Mark097&quot;' />
            <groupfilter function='member' level='[markets_code]' member='&quot;Mark999&quot;' />
            <groupfilter function='member' level='[markets_code]' member='%null%' />
          </groupfilter>
        </groupfilter>
      </filter>
      <filter class='quantitative' column='[sales_amount]' filter-group='2' included-values='in-range'>
        <min>1.0</min>
        <max>1510944.0</max>
      </filter>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='customers' id='customers_C9FCEDF2A1DB4685B12189387C22AFEB'>
            <properties context=''>
              <relation connection='mysql.1usblem179v1nj1emwns504o6eqa' name='customers' table='[customers]' type='table' />
            </properties>
          </object>
          <object caption='date' id='date_0DE2063B09D34DB2ABD6F83E5F184482'>
            <properties context=''>
              <relation connection='mysql.1usblem179v1nj1emwns504o6eqa' name='date' table='[date]' type='table' />
            </properties>
          </object>
          <object caption='markets' id='markets_24D2DC8F97D747BB82C28148CD0294A0'>
            <properties context=''>
              <relation connection='mysql.1usblem179v1nj1emwns504o6eqa' name='markets' table='[markets]' type='table' />
            </properties>
          </object>
          <object caption='products' id='products_BF3CFC70ECFF44F4ABF4D11D734D8F07'>
            <properties context=''>
              <relation connection='mysql.1usblem179v1nj1emwns504o6eqa' name='products' table='[products]' type='table' />
            </properties>
          </object>
          <object caption='transactions' id='transactions_D73AC3CBF85D44C692CC9A6C05E64796'>
            <properties context=''>
              <relation connection='mysql.1usblem179v1nj1emwns504o6eqa' name='transactions' table='[transactions]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[customer_code]' />
              <expression op='[customer_code (customers)]' />
            </expression>
            <first-end-point object-id='transactions_D73AC3CBF85D44C692CC9A6C05E64796' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='customers_C9FCEDF2A1DB4685B12189387C22AFEB' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[order_date]' />
              <expression op='[date]' />
            </expression>
            <first-end-point object-id='transactions_D73AC3CBF85D44C692CC9A6C05E64796' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='date_0DE2063B09D34DB2ABD6F83E5F184482' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[market_code]' />
              <expression op='[markets_code]' />
            </expression>
            <first-end-point object-id='transactions_D73AC3CBF85D44C692CC9A6C05E64796' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='markets_24D2DC8F97D747BB82C28148CD0294A0' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[product_code]' />
              <expression op='[product_code (products)]' />
            </expression>
            <first-end-point object-id='transactions_D73AC3CBF85D44C692CC9A6C05E64796' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='products_BF3CFC70ECFF44F4ABF4D11D734D8F07' unique-key='true' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_54ACD74E41A54604A04F707D35140016]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Revenue' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_95AC4108A45645939A87D40D101DAF63]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Revenue By Market' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_901C5D680640486F997D6FF49F56C4CE]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Top 5 Customer' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_8FF2B7CD9C9D4BBD92ABFD0C255E6302]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Top 5 Product' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action6_326256727296453E997AB9C1A05A5D9A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_472105B2AB04484BB495A172F2341A29]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Revenue by Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7_D583B77A027749A69C3E0B0F1FD6D799]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1p55jmd1q4e3ot18gdkxi1mykljm' />
          </datasources>
          <datasource-dependencies datasource='federated.1p55jmd1q4e3ot18gdkxi1mykljm'>
            <column caption='Blank' datatype='string' name='[Calculation_435160381052997633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_435160381052997633]' derivation='None' name='[none:Calculation_435160381052997633:nk]' pivot='key' type='nominal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_326256727296453E997AB9C1A05A5D9A]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_435160381052997633]' member='&quot; &quot;' />
              <groupfilter function='member' level='[yr:cy_date:ok]' member='2020' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Markets Name)]'>
            <groupfilter function='member' level='[markets_name]' member='&quot;Delhi NCR&quot;' user:ui-action-filter='[Action2_95AC4108A45645939A87D40D101DAF63]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Markets Name)]</column>
            <column>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[mn:cy_date:ok]' value='iLLL' />
            <format attr='font-weight' field='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[mn:cy_date:ok]' value='bold' />
            <format attr='color' field='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[mn:cy_date:ok]' value='#f17b79' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[none:Calculation_435160381052997633:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[mn:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{A7AA28F0-BF79-497A-86B4-8705830C79BD}' />
    </worksheet>
    <worksheet name='Quanity'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Quantity&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1p55jmd1q4e3ot18gdkxi1mykljm' />
          </datasources>
          <datasource-dependencies datasource='federated.1p55jmd1q4e3ot18gdkxi1mykljm'>
            <column caption='Blank' datatype='string' name='[Calculation_435160381052997633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_D583B77A027749A69C3E0B0F1FD6D799]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_435160381052997633]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_326256727296453E997AB9C1A05A5D9A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_435160381052997633]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Markets Name)]'>
            <groupfilter function='member' level='[markets_name]' member='&quot;Delhi NCR&quot;' user:ui-action-filter='[Action2_95AC4108A45645939A87D40D101DAF63]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Markets Name)]</column>
            <column>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:sales_qty:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:sales_qty:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#4e79a7' fontsize='16'>Sales Quanity</run>
                <run>Æ&#10;</run>
                <run fontcolor='#4e79a7' fontsize='16'><![CDATA[<[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:sales_qty:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A18D2C6A-706A-4C54-9330-721CB7B2BD0B}' />
    </worksheet>
    <worksheet name='Revenue'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Revenue</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1p55jmd1q4e3ot18gdkxi1mykljm' />
          </datasources>
          <datasource-dependencies datasource='federated.1p55jmd1q4e3ot18gdkxi1mykljm'>
            <column caption='Normalized amount' datatype='real' name='[Calculation_435160381039443968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] ==&apos;USD&apos; THEN [sales_amount]*76 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_435160381052997633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_435160381039443968]' derivation='Sum' name='[sum:Calculation_435160381039443968:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_D583B77A027749A69C3E0B0F1FD6D799]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_435160381052997633]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_326256727296453E997AB9C1A05A5D9A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_435160381052997633]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Markets Name)]'>
            <groupfilter function='member' level='[markets_name]' member='&quot;Delhi NCR&quot;' user:ui-action-filter='[Action2_95AC4108A45645939A87D40D101DAF63]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Markets Name)]</column>
            <column>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:Calculation_435160381039443968:qk]' value='c&quot;₹ &quot;#,##0,,.00M;&quot;₹ &quot;-#,##0,,.00M' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:Calculation_435160381039443968:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#4e79a7' fontsize='16'>Total Revenue</run>
                <run>Æ&#10;</run>
                <run fontcolor='#4e79a7' fontsize='16'><![CDATA[<[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:Calculation_435160381039443968:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{47CB91D0-4AA0-4F63-AFF8-9E5740A09F31}' />
    </worksheet>
    <worksheet name='Revenue By Market'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1p55jmd1q4e3ot18gdkxi1mykljm' />
          </datasources>
          <datasource-dependencies datasource='federated.1p55jmd1q4e3ot18gdkxi1mykljm'>
            <column caption='Normalized amount' datatype='real' name='[Calculation_435160381039443968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] ==&apos;USD&apos; THEN [sales_amount]*76 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_435160381052997633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_435160381039443968]' derivation='Sum' name='[sum:Calculation_435160381039443968:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_D583B77A027749A69C3E0B0F1FD6D799]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_435160381052997633]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_326256727296453E997AB9C1A05A5D9A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_435160381052997633]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:Calculation_435160381039443968:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' field='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:Calculation_435160381039443968:qk]' value='auto' />
            <format attr='text-orientation' field='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:Calculation_435160381039443968:qk]' value='-90' />
            <format attr='wrap' field='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:Calculation_435160381039443968:qk]' value='auto' />
            <format attr='text-format' field='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:Calculation_435160381039443968:qk]' value='c&quot;₹ &quot;#,##0,,.00M;&quot;₹ &quot;-#,##0,,.00M' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:Calculation_435160381039443968:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d37295' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[none:markets_name:nk]</rows>
        <cols>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:Calculation_435160381039443968:qk]</cols>
      </table>
      <simple-id uuid='{D273A8F9-D36D-4B68-A407-D55A15E87F07}' />
    </worksheet>
    <worksheet name='Revenue by Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1p55jmd1q4e3ot18gdkxi1mykljm' />
          </datasources>
          <datasource-dependencies datasource='federated.1p55jmd1q4e3ot18gdkxi1mykljm'>
            <column caption='Normalized amount' datatype='real' name='[Calculation_435160381039443968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] ==&apos;USD&apos; THEN [sales_amount]*76 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_435160381052997633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_435160381039443968]' derivation='Sum' name='[sum:Calculation_435160381039443968:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Month-Trunc' name='[tmn:cy_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_D583B77A027749A69C3E0B0F1FD6D799]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_435160381052997633]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_326256727296453E997AB9C1A05A5D9A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_435160381052997633]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Markets Name)]'>
            <groupfilter function='member' level='[markets_name]' member='&quot;Delhi NCR&quot;' user:ui-action-filter='[Action2_95AC4108A45645939A87D40D101DAF63]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Markets Name)]</column>
            <column>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:Calculation_435160381039443968:qk]' value='c#,##0,,.00M' />
            <format attr='cell-w' value='66' />
            <format attr='cell-h' value='22' />
            <format attr='cell' value='22' />
            <format attr='cell-q' value='110' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:Calculation_435160381039443968:qk]' palette='red_blue_diverging_10_0' type='interpolated' />
            <encoding attr='size-bar' field='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:Calculation_435160381039443968:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:Calculation_435160381039443968:qk]' />
              <text column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:Calculation_435160381039443968:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:Calculation_435160381039443968:qk]</rows>
        <cols>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[tmn:cy_date:qk]</cols>
      </table>
      <simple-id uuid='{7C4C15A6-9E3E-4C40-91F8-B4CC4C038DF7}' />
    </worksheet>
    <worksheet name='Sales Quantity by market'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1p55jmd1q4e3ot18gdkxi1mykljm' />
          </datasources>
          <datasource-dependencies datasource='federated.1p55jmd1q4e3ot18gdkxi1mykljm'>
            <column caption='Blank' datatype='string' name='[Calculation_435160381052997633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_D583B77A027749A69C3E0B0F1FD6D799]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_435160381052997633]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_326256727296453E997AB9C1A05A5D9A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_435160381052997633]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Markets Name)]'>
            <groupfilter function='member' level='[markets_name]' member='&quot;Delhi NCR&quot;' user:ui-action-filter='[Action2_95AC4108A45645939A87D40D101DAF63]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Markets Name)]</column>
            <column>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:sales_qty:qk]' field-type='quantitative' max='1045669' min='-237530' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:sales_qty:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:sales_qty:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[none:markets_name:nk]' />
              <text column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:sales_qty:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:sales_qty:qk]</rows>
        <cols>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[none:markets_name:nk]</cols>
      </table>
      <simple-id uuid='{13E96927-7B27-401E-A551-9AFF6C548D6B}' />
    </worksheet>
    <worksheet name='Top 5 Customer'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1p55jmd1q4e3ot18gdkxi1mykljm' />
          </datasources>
          <datasource-dependencies datasource='federated.1p55jmd1q4e3ot18gdkxi1mykljm'>
            <column caption='Normalized amount' datatype='real' name='[Calculation_435160381039443968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] ==&apos;USD&apos; THEN [sales_amount]*76 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_435160381052997633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[custmer_name]' derivation='None' name='[none:custmer_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_435160381039443968]' derivation='Sum' name='[sum:Calculation_435160381039443968:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_D583B77A027749A69C3E0B0F1FD6D799]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_435160381052997633]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_326256727296453E997AB9C1A05A5D9A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_435160381052997633]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Markets Name)]' context='true'>
            <groupfilter function='member' level='[markets_name]' member='&quot;Delhi NCR&quot;' user:ui-action-filter='[Action2_95AC4108A45645939A87D40D101DAF63]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[none:custmer_name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_435160381039443968])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:custmer_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Markets Name)]</column>
            <column>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[none:custmer_name:nk]</column>
            <column>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:Calculation_435160381039443968:qk]' value='72' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:Calculation_435160381039443968:qk]' value='c&quot;₹ &quot;#,##0,,.00M;&quot;₹ &quot;-#,##0,,.00M' />
            <format attr='font-size' field='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:Calculation_435160381039443968:qk]' value='8' />
            <format attr='font-family' field='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:Calculation_435160381039443968:qk]' value='Corbel' />
            <format attr='cell-w' value='66' />
            <format attr='cell-h' value='22' />
            <format attr='cell' value='22' />
            <format attr='cell-q' value='110' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:Calculation_435160381039443968:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='auto' />
                <format attr='text-orientation' value='0' />
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#edc948' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[none:custmer_name:nk]</rows>
        <cols>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:Calculation_435160381039443968:qk]</cols>
      </table>
      <simple-id uuid='{634C5F05-D820-47CC-B2BC-650BAA5EB033}' />
    </worksheet>
    <worksheet name='Top 5 Product'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1p55jmd1q4e3ot18gdkxi1mykljm' />
          </datasources>
          <datasource-dependencies datasource='federated.1p55jmd1q4e3ot18gdkxi1mykljm'>
            <column caption='Normalized amount' datatype='real' name='[Calculation_435160381039443968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] ==&apos;USD&apos; THEN [sales_amount]*76 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_435160381052997633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product_code (products)]' derivation='None' name='[none:product_code (products):nk]' pivot='key' type='nominal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_435160381039443968]' derivation='Sum' name='[sum:Calculation_435160381039443968:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_D583B77A027749A69C3E0B0F1FD6D799]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_435160381052997633]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_326256727296453E997AB9C1A05A5D9A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_435160381052997633]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Markets Name)]' context='true'>
            <groupfilter function='member' level='[markets_name]' member='&quot;Delhi NCR&quot;' user:ui-action-filter='[Action2_95AC4108A45645939A87D40D101DAF63]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[none:product_code (products):nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_435160381039443968])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:product_code (products):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[none:product_code (products):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:Calculation_435160381039443968:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Markets Name)]</column>
            <column>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[none:product_code (products):nk]</column>
            <column>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:Calculation_435160381039443968:qk]' value='c&quot;₹ &quot;#,##0,,.00M;&quot;₹ &quot;-#,##0,,.00M' />
            <format attr='cell-w' value='60' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:Calculation_435160381039443968:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='text-orientation' value='0' />
                <format attr='wrap' value='auto' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#b07aa1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[none:product_code (products):nk]</rows>
        <cols>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:Calculation_435160381039443968:qk]</cols>
      </table>
      <simple-id uuid='{93BC7D87-911A-4ED1-93E9-A2E968D1F1D5}' />
    </worksheet>
    <worksheet name='Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1p55jmd1q4e3ot18gdkxi1mykljm' />
          </datasources>
          <datasource-dependencies datasource='federated.1p55jmd1q4e3ot18gdkxi1mykljm'>
            <column caption='Blank' datatype='string' name='[Calculation_435160381052997633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_435160381052997633]' derivation='None' name='[none:Calculation_435160381052997633:nk]' pivot='key' type='nominal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_D583B77A027749A69C3E0B0F1FD6D799]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_435160381052997633]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Markets Name)]'>
            <groupfilter function='member' level='[markets_name]' member='&quot;Delhi NCR&quot;' user:ui-action-filter='[Action2_95AC4108A45645939A87D40D101DAF63]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Markets Name)]</column>
            <column>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[Action (Blank,MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#72b966' />
            <format attr='font-weight' field='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[mn:cy_date:ok]' value='bold' />
            <format attr='color' field='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[mn:cy_date:ok]' value='#000000' />
            <format attr='text-format' field='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[mn:cy_date:ok]' value='' />
            <format attr='font-weight' field='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[yr:cy_date:ok]' value='bold' />
            <format attr='color' field='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[yr:cy_date:ok]' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[mn:cy_date:ok]' value='bold' />
            <format attr='color' field='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[mn:cy_date:ok]' value='#e15759' />
            <format attr='text-format' field='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[mn:cy_date:ok]' value='iLLL' />
            <format attr='font-weight' field='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[yr:cy_date:ok]' value='bold' />
            <format attr='color' field='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[yr:cy_date:ok]' value='#e15759' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[none:Calculation_435160381052997633:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[yr:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{C1714BBE-42F2-492D-A78C-E772152FCC8A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='13' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='16' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='14' type-v2='layout-basic' w='98400' x='800' y='1000' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='9500' id='3' name='Year' show-title='false' w='31900' x='35200' y='2375' />
        <zone h='4875' id='4' name='Month' show-title='false' w='74400' x='10200' y='7750' />
        <zone h='10250' id='5' name='Revenue' show-title='false' w='17700' x='-1100' y='14000' />
        <zone h='9875' id='7' name='Quanity' show-title='false' w='21700' x='21400' y='14250' />
        <zone h='49625' id='8' name='Revenue By Market' w='25200' x='-200' y='22250' />
        <zone h='37125' id='9' name='Sales Quantity by market' w='44600' x='55600' y='38000' />
        <zone h='26750' id='10' name='Revenue by Year' w='100000' x='200' y='73625' />
        <zone h='41500' id='11' name='Top 5 Customer' w='28200' x='26600' y='29875' />
        <zone h='25125' id='12' name='Top 5 Product' w='51000' x='48700' y='11500' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1650' minheight='1650' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='30' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='29' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='76' h='9500' id='3' is-fixed='true' name='Year' show-title='false' w='31900' x='35200' y='2375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='39' h='4875' id='4' is-fixed='true' name='Month' show-title='false' w='74400' x='10200' y='7750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='201' h='25125' id='12' is-fixed='true' name='Top 5 Product' w='51000' x='48700' y='11500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='82' h='10250' id='5' is-fixed='true' name='Revenue' show-title='false' w='17700' x='-1100' y='14000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='79' h='9875' id='7' is-fixed='true' name='Quanity' show-title='false' w='21700' x='21400' y='14250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49625' id='8' is-fixed='true' name='Revenue By Market' w='25200' x='-200' y='22250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41500' id='11' is-fixed='true' name='Top 5 Customer' w='28200' x='26600' y='29875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37125' id='9' is-fixed='true' name='Sales Quantity by market' w='44600' x='55600' y='38000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='214' h='26750' id='10' is-fixed='true' name='Revenue by Year' w='100000' x='200' y='73625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{718DB456-072B-429E-902D-A5F441D4EBC6}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Revenue'>
      <cards>
        <edge name='left'>
          <strip size='136'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{06980B7E-2F73-4579-83D3-66C5C477BE6F}' />
    </window>
    <window class='worksheet' name='Quanity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{364A7F94-CD7F-4406-BE43-09D608DEB864}' />
    </window>
    <window class='worksheet' name='Revenue By Market'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{26592464-7E49-4A34-8665-67186BA63F34}' />
    </window>
    <window class='worksheet' name='Sales Quantity by market'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[none:markets_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[none:markets_name:nk]</field>
            <field>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:sales_qty:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{02B7636D-2E47-47E9-9F7A-A42F811FA214}' />
    </window>
    <window class='worksheet' name='Top 5 Customer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[none:custmer_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{296BF736-CAA5-405D-BF46-406B0711217F}' />
    </window>
    <window class='worksheet' name='Top 5 Product'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4E3BA25C-004B-4972-AC44-0E7BB2D94696}' />
    </window>
    <window class='worksheet' name='Revenue by Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:Calculation_435160381039443968:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2A000C55-E371-44E7-A0E0-C037D5B86A8A}' />
    </window>
    <window class='worksheet' name='Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A811A0FA-B9E8-4F95-AA49-D38639CC1562}' />
    </window>
    <window class='worksheet' name='Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5061860C-182F-407A-8111-DE0741D88D12}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Month' />
        <viewpoint name='Quanity' />
        <viewpoint name='Revenue' />
        <viewpoint name='Revenue By Market'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:Calculation_435160381039443968:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[none:markets_name:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[none:markets_name:nk]</field>
                    <field>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[sum:Calculation_435160381039443968:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Delhi NCR&quot;</value>
                  <value>520776634.0</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Revenue by Year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales Quantity by market'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 5 Customer'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 5 Product' />
        <viewpoint name='Year'>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.1p55jmd1q4e3ot18gdkxi1mykljm].[yr:cy_date:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>2020</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='14' />
      <grid grid-overlay-mode='on' grid-size='30' />
      <simple-id uuid='{01741713-5549-4CCF-A129-DA69167C5B3A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
      YII=
    </thumbnail>
    <thumbnail height='384' name='Sales Quantity by market' width='276'>
      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
      n707vYw7YQj3c3DXIXwzV/DwnGvWCs5FPOLJwddcZ7kqCHh3s+9kEg+tuPYOjJNFj3jI8TVT
      12Rx3SPgZfe+kyQ9tIIl13PrxpFJSdlycnzNvFZr8b3IlKKgxIuzkLVVHlztNWyuPc7vQ2Eg
      TOjCKZq2VtP4yUIqnrC+LZtRUklFsY+G6q00nfIzAjASoPd4LZtrvKSXVrFqlsVJS0YJlZf/
      8eDWplP4I4MEeo9Tu7kGb3opVavsnt615sh0U1mxENpq2GIVK5kybrt06dKleB/EZ5b3DR7f
      1jbxdgBk4Xnmh7iveZ4k/MduDv/vfTS9/7vr/DyUEQaP11N3oIXTg9f3eSgjg8eprztAy+lB
      c5+HQoiTtRt5tQUerHyRNXNsDz6qYDAY8y1mmXwUFJlUbjYoK57ebfBo5Fr7X1ht+3Wd8oiI
      MQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiI
      MQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiI
      MQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiI
      MQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiI
      MQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiI
      MQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiI
      MQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBjzuXgfwJQ24ufU/9lH
      w8EOzg0NE8ZB4ow8Fi8rxb04hzscdsMBzh2tp66x/fLs7aTcOw936UqW5N+B3Wjg3FHq6xpp
      PzfEcBhuT7mXee5SVi7Jt37PgSae3dRA1hOvU14UZafhs9RveolDSR42rneTaXvscqtSUOIk
      /IcWtr+8g567lrF23Y+Yk51MQjjEhe5fsbN2M98/5uF7T5VY/2KG+zm8tZpdvdl4yjfx1Ow0
      EkYC9Hr3UvPKBlqXb2S9O9MiKmH6D2+lelcv2Z5yNj01m7SEEQK9XvbWvMKG1uU3GIMwXXte
      o9mXQ+mTislUplOeeAifZf8rtXR9oZxnvrOCednJJAA4nEyf7ebbP6yg6Pw+qvd0EbYYHzi4
      nV3dLjxV63DPTovMJiSTvaCM9RXF+Bqq2dNlMTlwkO27unF5qljnnk1aZJDk7AWUra+g2NcQ
      9T3thE7uYPuRIIVrKynJuM5huaUoKHEQeq+JQ+dz+drfFpNstUFyEatLCwke2c9h37XDrdQ3
      9pG+bA1ui6VActFqSguDHNl/mLGjIVrrG+lLX8Yaq9WL3XvaCXjZ+WYLLKzgm4stvxuZQhSU
      OPjdb3sIu2aS64q+TfLCL1PsOMOx1oExr4e7OugIZ/HAonuiTTK/eA6cOcEHn4wZpKMjTNYD
      i4g6Ob+YOZzhxJhBOwHad75JG4t57NEi6zjKlKKgxEFoOAiJiSTabeS4jy/kQt9vuhj9693T
      2UHYVcAsm1MLZ14+OfTQfTo8epCOsIsC+0Hyc6Cn+3RMpz2Blp/yRnsay6vWUuiMYUBueboo
      GwdZd+dA2285G4KMqL+I05j+eQf87p8IANMACOH3BWG6C5vFDaTP4E6gb/A8EAlIyO8jyHRc
      9oPMiAxydTKKgYNs2dFJtmej5anXzbh48aLR/Yk5E/1stEKJg/T7/5KZjpP8/J2ztiuB9Dsz
      4PcfM3jllSGGfEBa6uXAROMkMQmGh4evTkYGSbUfxBkZZNhuo3A/TT9poDd3Jf/V8m7SeMFg
      MKb/5LNNK5R4cC3hiYrf8WzNyzzzx7+jbPn95Ex34iBM6OIF+rvaOfruUf7xtB/IuoE3SCUt
      DXz+WK+FjJqMDGI12bbtcdqu/N/dfP25JfYrpRuUkpLyZ9irmDDRz0ZBiZPkojKe//v5HDrw
      Dq8/9xZDw2HgdlJcmdxXVMSXv/ED7v/V99hyPJHrvzwxhN8ProIJliNWk5FByxXQwk8fbLv8
      ENuB7U3MjfG5laSkpJjeX6uUzzYFJY4SZszD/Z/n4bb8aogWXxDSP8/0K6+lkuoC/EN8Ajan
      PSEi132vXvZNjQwyZD8Y8wXjFd/y0PV8I7UH50V5iE6mIl1DmbR+x9nfQtK995B+5TUnGZku
      uODD9lGR84N8DGTMGDWZkYmLC/jsBxmMDI56T2uOTDeV5UWcb6im1huY8LuRqUFBmazOdnIy
      mERx0cwxL9+Tm4fD10HXQJQ5IHS6mw+ZSX6eY/QgeQ4fHfaDdH8IM/PzYlpxJBc/ymMLoa1m
      C0391/t8rdyKFJRJKUD7L97Fl76Ev5oz9lfbMauAAkcfx1o/ijp7or0Tcuczd9qYQQoKHPQd
      ayXq5Il2Osll/txYr70kU1RWhSe7l4Yf7+esmjLlKSiTTpg/tu9mV7uDxauWjX+q1bmIRzw5
      +JrrLFcFAe9u9p1M4qEV196BcbLoEQ85vmbqmvrH364OeNm97yRJD61gyfXcunFkUlK2nBxf
      M6/VetHJz9SmoMSJt3Y9L+85ypnBi4Qu/3aPBHo5vuN5vv9GNzPLNrA2yuOnGSWVVBT7aKje
      StMpPyORYXqP17K5xkt6aRWrZlmctGSUUHn5Hw9ubTqFPzJIoPc4tZtr8KaXUrVq1nVfYHVk
      uqmsWAhtNWyxipVMGbddunTpUrwPYioa8Z+h9UgT77aepd93kT8BjsRU7i5YwsN/s5R5MxIm
      2gODx+upO9DC6cHr+zyUkcHj1NcdoOX0oLnPQyHEydqNvNoCD1a+yJo5Ex2/tWAwGPMtZisr
      nt59w7Mysf0vrLb9uoIik4qCMrlNFBSd8oiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiI
      MQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiI
      MQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiI
      MQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiI
      MQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiI
      MQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiI
      MQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiIMQqKiBijoIiI
      MQqKiBjzuXgfwNQ2wuDxn7P3UAs954YYDgO3p3DXfQtYWupmcc4dOKLOBjh3tJ66xnbODQ0T
      5nZS7p2Hu3QlS/Lt5iBw7ij1dY20X37P21PuZZ67lJVL8rnDanCgiWc3NZD1xOuUF0XZafgs
      9Zte4lCSh43r3WTaHYDcshSUeAn3c/C/vci+81/g4bXrKJuTTXIChEMX+PC9Rmo3b6BxYQU/
      LCsi2WL28NZqdvVm4ynfxFOz00gYCdDr3UvNKxtoXb6R9e5Mi6iE6T+8lepdvWR7ytn01GzS
      EkYI9HrZW/MKG1qX32AMwnTteY1mXw6lTyomU5lOeeIiTNeeavYNFFLxzHdYMS8SEwCHczq5
      Xy5j08aHSW6pYdth37jpgYPb2dXtwlO1DvfsNBIAEpLJXlDG+opifA3V7OkKj3/bgYNs39WN
      y1PFOvds0iKDJGcvoGx9BcW+Bqr3dGExaSt0cgfbjwQpXFtJScZ1DsstRUGJi07+79GLuB78
      a4rHLT8iHJlL+evCMD2/fo/zo78QaqW+sY/0ZWtwWywFkotWU1oY5Mj+w4xNUYjW+kb60pex
      xmr1klzE6tJCgkf2Y9Gw6AJedr7ZAgsr+ObiKN+MTBkKSjz8c5BgGBITE202cpKYCASCDI96
      NdzVQUc4iwcW3RNlLpn5xXPgzAk++GTMIB0dYbIeWETUyfnFzOEMJ8YM2gnQvvNN2ljMY49a
      nJrJlKOgxMO/nkZqEvj9QzYbfcKQH0hLZdqoV3s6Owi7Cphlc2rhzMsnhx66T4dHD9IRdlFg
      P0h+DvR0n47ptCfQ8lPeaE9jedVaCp0xDMgtTxdl42IW/86dw9GGepqWrLc8dQl4f8bbPSks
      fvLfjgpKCL8vCNNduOx2nz6DO4G+wfNAJCAhv48g03HZDzIjMsjVySgGDrJlRyfZno2Wx38z
      Ll68aHR/Ys5EPxsFJU4ySiqpGn6VLS8+zx9WreXh+3OY7nQwEuil81A9bx3qY2bZBtaO+dM/
      xJAPyBq7ahnPSWISDA9fPVkaigySaj+IMzI45jRrnHA/TT9poDd3Jc9b3k0aLxgMxrCVfNYp
      KHGTTN6K9bz0F/W8sm0zT++4+hXnnV/hPz73BMWpCTe471TS0sDnj/VayKjJyCBWk23bHqft
      yv/dzdefW2K/UrpBKSkpf4a9igkT/WwUlHgZOccvt71Kwx9yefg//YDvjHkO5R12/P1Gji37
      L5S7827gYucQfj+4CiZYjlhNRgYtV0ALP32w7fJDbAe2NzE3xudWkpKSYnp/rWQ+23RRNh7C
      /TS9/CL7/mkJ39v0OO5xz6GsZdOPvkHyL19m01ujnwtJJdUF+IcsVxBXhRgOjr2LlBoZZGiC
      RUsoMojd/Scc97HiWx6yexupPdh/3c+tyK1LQYmD0HsNNH44jaXfsPnrnlzE1925XDzyNu9e
      iYCTjEwXXPBh+6jI+UE+BjJmpF95yZmRiYsL+OwHGYwMkm63GeDIdFNZXsT5hmpqvYEJtpap
      QkGJgyHfHwiTR+599tu5pn8e6OG3Z6++dk9uHg5fB10D0edCp7v5kJnk5zlGD5Ln8NFhP0j3
      hzAzPy+mC63JxY/y2EJoq9lCU7/WKaKgxEXk9KOP39v8bgOEhoeBLDJH3b91zCqgwNHHsdaP
      okwFONHeCbnzmTv6QohjFgUFDvqOtRJ18kQ7neQyf26s116SKSqrwpPdS8OP93NWTZnyFJQ4
      cM5/iMUpfRw80E7Uk4WAl537TuKY+VcsGv1AiHMRj3hy8DXXWa4KAt7d7DuZxEMrrr0D42TR
      Ix5yfM3UNVlc9wh42b3vJEkPrWDJ9dy6cWRSUracHF8zr9V6o38/MiUoKPHgLGRtVSkZJ2vY
      8MwOjp65QOjyb3g4dJHe9/fzP56toT3pIZ58Yvyt2YySSiqKfTRUb6XplJ8RgJEAvcdr2Vzj
      Jb20ilWzLE5aMkqovPyPB7c2ncIfGSTQe5zazTV400upWjUrptOd0RyZbiorFkJbDVusYiVT
      xm2XLl26FO+DmLJGBnn/0D/wy9YPOPv7i/wJwJFI6t0zWbz0Eb76pbtwRv3tHmHweD11B1o4
      PXh9n4cyMnic+roDtJweNPd5KIQ4WbuRV1vgwcoXWTPnxp6hCQaDMd9itrLi6d03PCsT2//C
      atuvKygyqSgok9tEQdEpj4gYo6CIiDEKiogYo6CIiDEKiogYo6CIiDEKiogYo6CIiDEKiogY
      o6CIiDEKiogYo6CIiDEKiogYo6CIiDEKiogYo6CIiDEKiogYo6CIiDEKiogYo6CIiDEKiogY
      o6CIiDEKiogYo6CIiDEKiogYo6CIiDEKiogYo6CIiDEKiogYo6CIiDEKiogYo6CIiDEKiogY
      o6CIiDEKiogYo6CIiDEKiogYo6CIiDEKiogYo6CIiDEKiogYo6CIiDEKiogYo6CIiDEKiogY
      o6CIiDEKiogYo6CIiDEKiogYo6CIiDEKiogYo6CIiDEKiogYo6CIiDEKiogYo6CIiDEKiogY
      o6CIiDEKiogYo6CIiDEKiogYo6CIiDEKiogYo6CIiDEKiogYo6CIiDEKiogYo6CIiDEKiogY
      o6CIiDEKiogYo6CIiDEKiogYo6CIiDEKiogYo6CIiDEKiogYo6CIiDEKiogYo6CIiDEKiogY
      87l4H8CU5H2Dx7e1xbhxDqXPP01J+rWvBzh3tJ66xnbODQ0T5nZS7p2Hu3QlS/LvwGGzx8C5
      o9TXNdJ+bojhMNyeci/z3KWsXJLPHVaDA008u6mBrCdep7woyk7DZ6nf9BKHkjxsXO8m0+4A
      5JaloMRDUTmvv14+wUYfsX/jj3gnZRH3XxuTcD+Ht1azqzcbT/kmnpqdRsJIgF7vXmpe2UDr
      8o2sd2daRCVM/+GtVO/qJdtTzqanZpOWMEKg18vemlfY0Lr8BmMQpmvPazT7cih9UjGZynTK
      M0mFvL/g8PkkHly+BNc1Xxs4uJ1d3S48Vetwz04jASAhmewFZayvKMbXUM2ervD4nQ4cZPuu
      blyeKta5Z5MWGSQ5ewFl6yso9jVQvacLi0n7Yz25g+1HghSuraQk40a+W7lVKCiTko9jzW0E
      s0pYOueaP/ehVuob+0hftga3xVIguWg1pYVBjuw/jG/sIK31jfSlL2ON1eoluYjVpYUEj+zn
      sO/aL9oIeNn5ZgssrOCbi5OvY1BuRQrKJBTufIe3zziYt+wrXPsHP9zVQUc4iwcW3RNlOpn5
      xXPgzAk++GTMIB0dYbIeWETUyfnFzOEMJ8YM2gnQvvNN2ljMY48WoZyIgjLp+Hj3nV8TTF/G
      1xY5x321p7ODsKuAWTanFs68fHLooft0ePQgHWEXBfaD5OdAT/fpmE57Ai0/5Y32NJZXraVw
      /KHKFKSLspNM+OxhDvVAYdlSi5VECL8vCNNd466rjJE+gzuBvsHzcHmNE/L7CDIdl/0gMyKD
      XJ2MYuAgW3Z0ku3ZaHnqdTMuXrxodH9izkQ/GwVlUgnxXtMhzqd8mTULrU4ghhjyAVmpTLPd
      j5PEJBgeHr46GRkk1X4QZ2SQYbuNwv00/aSB3tyVPG95N2m8YDAYw1byWaegTCYfNdP4fpjc
      lV9l1k390U8lLQ18/livhYyajAxiNdm27XGuPj1zN19/bvwdKBNSUlL+DHsVEyb62Sgok0YI
      7y8Ocz7pQf5uyc3+mg7h94OrYILliNVkZNByBbTw0wfbLj/EdmB7E3NjfG4lKSkppvfXSuaz
      TRdlJwvfMZrbgmSVLOXaO8VXpZLqAvxDliuIq0IMByExMfHqZGSQoQkWLaHIIIl2GznuY8W3
      PGT3NlJ7sP+6n1uRW5eCMimE6fqHJs445rHsK3aXQp1kZLrggg/bR0XOD/IxkDHj6iO2zoxM
      XFzAZz/IYGSQcU/6X8OR6aayvIjzDdXUegMTbC1ThYIyGQTaOHT0IunLvobFneIx7snNw+Hr
      oGsg+jah0918yEzy8xyjB8lz+OiwH6T7Q5iZnxfThdbk4kd5bCG01WyhqV/rFFFQJoWPDv2c
      kxTy75dGe+TsKsesAgocfRxr/SjKFgFOtHdC7nzmThszSEGBg75jrUSdPNFOJ7nMnxvrtZdk
      isqq8GT30vDj/ZxVU6Y8BSXeQq283XyelC8vxfJO8bWci3jEk4Ovuc5yVRDw7mbfySQeWnHt
      HRgnix7xkONrpq7J4rpHwMvufSdJemgF13VN2JFJSdlycnzNvFbrRSc/U5uCEmcDv2rm/XAu
      7q/Oiuk0AyCjpJKKYh8N1VtpOuVnBGAkQO/xWjbXeEkvrWKV1X3njBIqL//jwa1Np/BHBgn0
      Hqd2cw3e9FKqVsV+HJ9yZLqprFgIbTVssYqVTBm6bRxP4U4OHewj6cHK61sVkExR+Ys8d7ye
      ureeoXFw1OehfOdHtp+HklxUzovPHae+7i2eaRwc9Xko3+FH0T4PJZYjKnqUxxaf4tWGanbl
      vMiaOQk3tiP5TLvt0qVLl+J9ECKfCgaDMT+zYmXF07sNHo1ca/8Lq22/rlMeETFGQRERYxQU
      ETFGQRERYxQUETFGQRERYxQUETFGQRERYxQUETFGQRERYxQUETFGQRERYxQUETFGQRERYxQU
      ETFGQRERYxQUETFGQRERYxQUETFGQRERYxQUETFGQRERY/4/d9ppCD44g90AAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='378' name='Top 5 Customer' width='384'>
      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
      YII=
    </thumbnail>
    <thumbnail height='358' name='Top 5 Product' width='384'>
      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
      /w+iZZRaiRLcwgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
